{
  "title": "Git Commands",
  "language": "en",
  "tags": ["git", "version-control", "terminal"],
  "items": [
    {
      "code": "git init",
      "description": "Initialize Git repository",
      "example": "git init | git init --bare (bare repository)"
    },
    {
      "code": "git clone",
      "description": "Clone remote repository",
      "example": "git clone https://github.com/user/repo.git"
    },
    {
      "code": "git status",
      "description": "Check repository status",
      "example": "git status | git status --short | git status --porcelain"
    },
    {
      "code": "git add",
      "description": "Add files to staging area",
      "example": "git add file.txt | git add . | git add -A"
    },
    {
      "code": "git commit",
      "description": "Create a new commit",
      "example": "git commit -m \"message\" | git commit -am \"message\" (add+commit)"
    },
    {
      "code": "git push",
      "description": "Upload changes to remote",
      "example": "git push origin main | git push -u origin feature-branch"
    },
    {
      "code": "git pull",
      "description": "Download changes from remote",
      "example": "git pull origin main | git pull --rebase"
    },
    {
      "code": "git fetch",
      "description": "Download changes without merging",
      "example": "git fetch origin | git fetch --all"
    },
    {
      "code": "git branch",
      "description": "Manage branches",
      "example": "git branch | git branch new-branch | git branch -d branch"
    },
    {
      "code": "git checkout",
      "description": "Switch branches or restore files",
      "example": "git checkout main | git checkout -b new-branch"
    },
    {
      "code": "git switch",
      "description": "Switch branches (modern command)",
      "example": "git switch main | git switch -c new-branch"
    },
    {
      "code": "git merge",
      "description": "Merge branches",
      "example": "git merge feature-branch | git merge --no-ff feature-branch"
    },
    {
      "code": "git rebase",
      "description": "Rewrite commit history",
      "example": "git rebase main | git rebase -i HEAD~3"
    },
    {
      "code": "git log",
      "description": "View commit history",
      "example": "git log --oneline | git log --graph --all"
    },
    {
      "code": "git diff",
      "description": "Show differences",
      "example": "git diff | git diff --staged | git diff HEAD~1"
    },
    {
      "code": "git stash",
      "description": "Temporarily store changes",
      "example": "git stash | git stash pop | git stash list"
    },
    {
      "code": "git remote",
      "description": "Manage remote repositories",
      "example": "git remote -v | git remote add origin URL"
    },
    {
      "code": "git reset",
      "description": "Undo changes",
      "example": "git reset HEAD~1 | git reset --hard HEAD~1"
    },
    {
      "code": "git tag",
      "description": "Create tags",
      "example": "git tag v1.0.0 | git tag -a v1.0.0 -m \"message\""
    },
    {
      "code": "git show",
      "description": "Show commit information",
      "example": "git show HEAD | git show v1.0.0"
    }
  ],
  "created": "2025-09-24",
  "updated": "2025-10-01"
}
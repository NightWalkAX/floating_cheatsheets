{
  "title": "Python Basics",
  "language": "en",
  "tags": ["python", "programming", "basics"],
  "items": [
    {
      "code": "print()",
      "description": "Print to console",
      "example": "print(\"Hello world\") | print(f\"Variable: {variable}\")"
    },
    {
      "code": "input()",
      "description": "Read user input",
      "example": "name = input(\"Your name: \")"
    },
    {
      "code": "len()",
      "description": "Get length",
      "example": "len(\"text\") | len([1,2,3]) | len({\"a\":1})"
    },
    {
      "code": "type()",
      "description": "Get data type",
      "example": "type(42) | type(\"text\") | type([])"
    },
    {
      "code": "str(), int(), float()",
      "description": "Convert data types",
      "example": "str(42) | int(\"42\") | float(\"3.14\")"
    },
    {
      "code": "range()",
      "description": "Generate sequence of numbers",
      "example": "range(10) | range(1, 11) | range(0, 10, 2)"
    },
    {
      "code": "for loop",
      "description": "For loop",
      "example": "for i in range(5): print(i)"
    },
    {
      "code": "while loop",
      "description": "While loop",
      "example": "while condition: # code"
    },
    {
      "code": "if/elif/else",
      "description": "Conditionals",
      "example": "if x > 0: print(\"positive\") elif x < 0: print(\"negative\")"
    },
    {
      "code": "def function()",
      "description": "Define function",
      "example": "def greet(name): return f\"Hello {name}\""
    },
    {
      "code": "list comprehension",
      "description": "Create lists with comprehension",
      "example": "[x**2 for x in range(10)] | [x for x in my_list if x > 0]"
    },
    {
      "code": "with open()",
      "description": "Read/write files",
      "example": "with open('file.txt', 'r') as f: content = f.read()"
    },
    {
      "code": "try/except",
      "description": "Exception handling",
      "example": "try: result = 10/0 except ZeroDivisionError: print(\"Error\")"
    },
    {
      "code": "import",
      "description": "Import modules",
      "example": "import os | from datetime import datetime | import json as js"
    },
    {
      "code": ".split(), .join()",
      "description": "Split and join strings",
      "example": "\"a,b,c\".split(\",\") | \",\".join([\"a\", \"b\", \"c\"])"
    },
    {
      "code": ".append(), .extend()",
      "description": "Add to lists",
      "example": "my_list.append(item) | my_list.extend([1,2,3])"
    },
    {
      "code": ".keys(), .values(), .items()",
      "description": "Dictionary methods",
      "example": "my_dict.keys() | my_dict.values() | my_dict.items()"
    },
    {
      "code": "enumerate()",
      "description": "Enumerate with index",
      "example": "for i, value in enumerate(my_list): print(i, value)"
    },
    {
      "code": "zip()",
      "description": "Combine iterables",
      "example": "for a, b in zip(list1, list2): print(a, b)"
    },
    {
      "code": "sorted()",
      "description": "Sort iterables",
      "example": "sorted([3,1,2]) | sorted(my_list, key=len, reverse=True)"
    }
  ],
  "created": "2024-01-01",
  "updated": "2025-10-01"
}
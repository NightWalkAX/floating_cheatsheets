{
  "title": "Logging API (Server)",
  "language": "en",
  "tags": ["logging", "frappe", "python", "backend", "debug"],
  "items": [
    {
      "description": "Get a logger instance for a specific module.",
      "code": "logger = frappe.logger('my_app.utils')",
      "example": "# Inside a Python file in your app\nimport frappe\n\nlogger = frappe.logger('my_module')"
    },
    {
      "description": "Log a debug message.",
      "code": "logger.debug('Message')",
      "example": "logger.debug(f'Processing document: {doc.name}')\n# Will only be shown if the log level is DEBUG"
    },
    {
      "description": "Log an informational message.",
      "code": "logger.info('Message')",
      "example": "logger.info('Data synchronization has been completed.')"
    },
    {
      "description": "Log a warning message.",
      "code": "logger.warning('Message')",
      "example": "logger.warning('The API configuration is deprecated. Please update.')"
    },
    {
      "description": "Log an error message.",
      "code": "logger.error('Message')",
      "example": "logger.error('Could not connect to the external service.')"
    },
    {
      "description": "Log an error with an exception traceback.",
      "code": "logger.exception('Message')",
      "example": "try:\n    # Code that might fail\n    result = 1 / 0\nexcept Exception:\n    logger.exception('An error occurred while calculating the result.')"
    }
  ],
  "created": "2025-09-26",
  "updated": "2025-10-01"
}
{
  "title": "Chart API",
  "language": "en",
  "tags": ["charts", "javascript", "api"],
  "items": [
    {
      "code": "new frappe.ui.RealtimeChart(dom_element, event_name, max_label_count, data)",
      "description": "Creates a new RealtimeChart instance that adds real-time data update functionality on top of the Frappe Chart API.",
      "example": "const data = {\n datasets: [\n {\n name: \"Some Data\",\n values: [],\n },\n ],\n};\n\nlet chart = new frappe.ui.RealtimeChart(\"#chart\", \"test_event\", 8, {\n title: \"My Realtime Chart\",\n data: data,\n type: \"line\",\n height: 250,\n colors: [\"#7cd6fd\", \"#743ee2\"]\n});"
    },
    {
      "code": "frappe.publish_realtime(event, data)",
      "description": "This Python code can be executed to publish real-time data for the chart. The 'label' key specifies the label to be appended, and 'points' specifies the data points.",
      "example": "data = {\n 'label': 1,\n 'points': [10]\n}\nfrappe.publish_realtime('test_event', data)"
    },
    {
      "code": "chart.start_updating()",
      "description": "Start listening to the specified socket event and update the RealtimeChart accordingly.",
      "example": "chart.start_updating();"
    },
    {
      "code": "chart.stop_updating()",
      "description": "Stop listening to the socket event that RealtimeChart was initialized with.",
      "example": "chart.stop_updating();"
    },
    {
      "code": "chart.update_chart(label, data)",
      "description": "Manually updates RealtimeChart by appending the label and associated data to the end of the chart.",
      "example": "chart.update_chart(2, [30]);"
    }
  ],
  "created": "2024-01-01",
  "updated": "2024-01-01"
}